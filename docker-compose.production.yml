version: '3.8'

services:
  app:
    image: ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    container_name: gitee-notion-sync-prod
    restart: always
    ports:
      - "${SERVICE_PORT:-8000}:8000"
    environment:
      # 基础配置
      - APP_PORT=8000
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
      
      # 数据库配置
      - DB_URL=sqlite:///data/sync.db
      
      # Gitee 配置
      - GITEE_WEBHOOK_SECRET=${GITEE_WEBHOOK_SECRET}
      
      # Notion 配置
      - NOTION_TOKEN=${NOTION_TOKEN}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      
      # 安全和限制 (生产环境更严格)
      - RATE_LIMIT_PER_MINUTE=60
      - MAX_REQUEST_SIZE=1048576
      - DEADLETTER_REPLAY_TOKEN=${DEADLETTER_REPLAY_TOKEN}
      
      # 生产配置
      - DISABLE_NOTION=false
      - DISABLE_METRICS=false
      
    volumes:
      - ./data:/app/data:Z
      - ./logs:/app/logs:Z
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # 更严格的健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    labels:
      - "com.gitee-notion-sync.environment=production"
      - "com.gitee-notion-sync.version=${IMAGE_TAG:-latest}"
      - "com.gitee-notion-sync.deployment-time=${DEPLOYMENT_TIME:-unknown}"
    
    # 安全设置
    security_opt:
      - no-new-privileges:true
    read_only: false  # 需要写入日志和数据
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    networks:
      - gitee-notion-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"

  # 生产环境监控 (推荐启用)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-prod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - gitee-notion-network
    profiles:
      - monitoring
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 128M

  # 生产环境 Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - gitee-notion-network
    profiles:
      - monitoring
    depends_on:
      - prometheus
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 128M

  # 可选: 日志聚合 (Loki)
  loki:
    image: grafana/loki:latest
    container_name: loki-prod
    restart: always
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - gitee-notion-network
    profiles:
      - logging

  # 可选: 反向代理 (Nginx)
  nginx:
    image: nginx:alpine
    container_name: nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - gitee-notion-network
    profiles:
      - proxy

networks:
  gitee-notion-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: gitee-notion-prod

volumes:
  prometheus-data:
  grafana-data:
  loki-data: 