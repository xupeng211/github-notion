"""init from models

Revision ID: f233e784c02f
Revises:
Create Date: 2025-08-13 22:03:49.251528

"""

from __future__ import annotations

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "f233e784c02f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mapping",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("issue_id", sa.String(), nullable=False),
        sa.Column("notion_page_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_mapping_issue_id"), "mapping", ["issue_id"], unique=False)
    op.create_index(op.f("ix_mapping_notion_page_id"), "mapping", ["notion_page_id"], unique=False)
    op.create_unique_constraint("uq_mapping_issue_id", "mapping", ["issue_id"])
    op.create_unique_constraint("uq_mapping_notion_page_id", "mapping", ["notion_page_id"])

    op.create_table(
        "deadletter",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("payload", sa.JSON(), nullable=False),
        sa.Column("reason", sa.String(), nullable=False),
        sa.Column("retries", sa.Integer(), nullable=False),
        sa.Column("last_error", sa.Text(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "processed_event",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("event_hash", sa.String(), nullable=False),
        sa.Column("issue_id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_processed_event_event_hash"), "processed_event", ["event_hash"], unique=False)
    op.create_index(op.f("ix_processed_event_issue_id"), "processed_event", ["issue_id"], unique=False)
    op.create_unique_constraint("uq_processed_event_event_hash", "processed_event", ["event_hash"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_unique_constraint("uq_processed_event_event_hash", "processed_event", type_="unique")
    op.drop_index(op.f("ix_processed_event_issue_id"), table_name="processed_event")
    op.drop_index(op.f("ix_processed_event_event_hash"), table_name="processed_event")
    op.drop_table("processed_event")
    op.drop_unique_constraint("uq_mapping_notion_page_id", "mapping", type_="unique")
    op.drop_unique_constraint("uq_mapping_issue_id", "mapping", type_="unique")
    op.drop_index(op.f("ix_mapping_notion_page_id"), table_name="mapping")
    op.drop_index(op.f("ix_mapping_issue_id"), table_name="mapping")
    op.drop_table("mapping")
    op.drop_table("deadletter")
    # ### end Alembic commands ###
