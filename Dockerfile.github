# 简化版 GitHub Actions Dockerfile
# 专门针对 CI/CD 环境优化，最小化网络依赖

FROM python:3.11-slim-bullseye

# 设置工作目录
WORKDIR /app

# 设置环境变量 - 最大化网络容错
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_DEFAULT_TIMEOUT=600 \
    PIP_RETRIES=10 \
    DEBIAN_FRONTEND=noninteractive

# 只安装必要的系统依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 升级 pip 并配置网络优化
RUN python -m pip install --upgrade pip setuptools wheel

# 复制 requirements 文件
COPY requirements.txt .

# 安装核心依赖 - 分步安装减少失败风险
RUN echo "安装核心依赖..." && \
    pip install --no-cache-dir \
    --timeout 300 \
    --retries 5 \
    --prefer-binary \
    fastapi uvicorn sqlalchemy requests && \
    echo "✅ 核心依赖安装完成"

# 安装其他依赖
RUN echo "安装其他依赖..." && \
    pip install --no-cache-dir \
    --timeout 300 \
    --retries 5 \
    --prefer-binary \
    python-multipart python-dotenv && \
    echo "✅ 其他依赖安装完成"

# 复制应用代码
COPY . .

# 创建必要的目录
RUN mkdir -p /app/data /app/logs

# 健康检查
HEALTHCHECK --interval=30s --timeout=15s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health/ci || exit 1

# 暴露端口
EXPOSE 8000

# 启动命令
CMD ["python", "-m", "uvicorn", "app.server:app", "--host", "0.0.0.0", "--port", "8000"]
